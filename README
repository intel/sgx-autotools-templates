
The files in this package provide convenience macros and definitions
to integrate Intel Software Guard Extensions (Intel SGX) projects into
the GNU* build system. It includes the following.

M4 Macro files:
  sgx_init.m4
  sgx_init_optional.m4

Automake includes:
  sgx_app.am
  sgx_enclave.am
  sgx_tlib.am

In addition to these template files, two sample projects has been provided
that demonstrate their usage. One shows integration for a project that
requires Intel SGX, and the other for a project where Intel SGX support
is a compile-time option.


======================================================================
M4 Macros 
======================================================================

There are two m4 macro definition files.

   sgx_init.m4
   sgx_init_optional.m4

They define the following functions for use in GNU Autoconf configure.ac
files:

  SGX_INIT
    Set up definitions for a software build that depends on Intel SGX.
    The project will require the Intel SGX SDK and configure will 
    abort if it's not found.

  SGX_INIT_OPTIONAL
    Adds a configuration option to enable SGX support in the software
    project at build time. Intended for packages where Intel SGX is
    not required, and should be a configuration option prior to
    compilation. By default, Intel SGX support is disabled.

You should invoke either SGX_INIT or SGX_INIT_OPTIONAL. Do not call 
both.


The SGX_INIT_OPTIONAL macro takes the following actions:

  1. Adds a command line argument to enable SGX support for the build
     (it is disabled by default).

      --enable-sgx

  2. Defines the following cache variable:

       $ac_cv_enable_sgx 

    which is set to either "yes" or "no". This variable can be tested
    in configure.ac in order to modify the final build configuration.

  3. Invokes the SGX_INIT macro


The SGX_INIT macro takes the following actions:

  1. Adds the following configuration options to the final 'configure'
     script:

        --enable-sgx-simulation (default: disabled)

        --enclave-libdir=path (default: $EPREFIX/libexec)

        --with-sgx-build=debug|prerelease|release (default: debug)

        --with-sgxsdk=path (default: tries to auto-detect)

		--with-sgxssl=path (defaults to /opt/intel/sgxssl)

  2. Determines whether or not Intel SGX support should be enabled
     in the build. 

       * If SGX_INIT was invoked directly from configure.ac,
         then Intel SGX support is enabled.

       * If SGX_INIT_OPTIONAL was invoked instead, then Intel SGX
         support is enabled if and only if --enable-sgx was
         provided on the command line.
         
  3. Defines the C preprocessor symbol HAVE_SGX if Intel SGX support
     is enabled. Otherwise, it is left undefined.

  4. Sets the following Automake conditionals:

       SGX_ENABLED
		   If SGX support is enabled

       SGX_HW_SIM
		   If the user specified --enable-sgx-simulation

	   ENCLAVE_RELEASE_SIGN
		   If the enclave is being built in release mode
		   (--with-sgx-build=release)

  5. Attempts to discover the location of the Intel SGX SDK using the
     following procedure (if --with-sgxsdk is not provided):

       1) If --with-sgxsdk-path is defined, use that path.

       2) If the $SGX_SDK enviornment variable is set, use that path.

       3) Look in the following directories (in this order):

           /opt/intel/sgxsdk
           $HOME/sgxsdk
           ./sgxsdk

  6. If Intel SGX support is enabled, sets the following Makefile
     substitution variables.

     Intel SGX SDK paths:
        SGXSDK
        SGXSDK_BINDIR
        SGXSDK_INCDIR
        SGXSDK_LIBDIR

     Intel SGX SSL paths:
	    SGXSSL
	    SGXSSL_BINDIR
	    SGXSSL_INCDIR
	    SGXSSL_LIBDIR

     Enclave library installation path:
        enclave_libdir

     Flags for compiling and linking an Intel SGX enclave:
		SGX_ENCLAVE_CFLAGS
		SGX_ENCLAVE_CPPFLAGS
		SGX_ENCLAVE_CXXFLAGS
		SGX_ENCLAVE_LDFLAGS
		SGX_ENCLAVE_LDADD

     Flags for compiling an Intel SGX trusted library:
		SGX_TLIB_CFLAGS
		SGX_TLIB_CPPFLAGS
		SGX_TLIB_CXXFLAGS

	 Trusted runtime library names (to support h/w and simulation modes):
		SGX_TRTS_LIB
		SGX_TSERVICE_LIB

	 Untrusted runtime library names (to support h/w and simulation modes):
		SGX_UAE_SERVICE_LIB
		SGX_URTS_LIB

	 Indicating use of Intel SGX simulation mode:
		SGX_HW_SIM


======================================================================
Automake Includes
======================================================================
